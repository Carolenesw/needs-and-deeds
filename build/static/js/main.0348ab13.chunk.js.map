{"version":3,"sources":["components/listPerson.component.jsx","components/editPerson.component.jsx","components/createPerson.component.jsx","components/deletePerson.component.jsx","App.js","serviceWorker.js","index.js"],"names":["ListBar","props","person","personName","personAddress","personNeed","personDescription","personDate","to","_id","ListPerson","useState","lists","listData","setListData","useEffect","a","axios","result","data","fetchData","className","id","Table","striped","style","map","current","i","key","EditPerson","personEmail","personPhoneNumber","personVerification","setData","match","params","onChangePersonData","e","target","name","value","console","log","Form","onSubmit","preventDefault","post","then","res","history","push","FormGroup","row","Col","Label","Input","type","onChange","md","check","defaultChecked","Boolean","required","Button","color","CreatePerson","validateEmail","test","email","placeholder","DeletePerson","personHelperEmail","personValidEmail","delete","readOnly","newData","disabled","App","path","exact","component","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0348ab13.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Table } from 'reactstrap';\r\nimport { AiOutlineMail } from 'react-icons/ai';\r\n\r\nconst ListBar = (props) => {\r\n    return (\r\n        <tr>\r\n            <td>{props.person.personName}</td> \r\n            <td>{props.person.personAddress}</td>\r\n            <td>{props.person.personNeed}</td>\r\n            <td>{props.person.personDescription}</td>\r\n            <td>{props.person.personDate}</td>\r\n            <td>\r\n                <Link to={\"/delete/\"+props.person._id}><AiOutlineMail /></Link>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst ListPerson = () => {\r\n    const [listData, setListData] = useState({ lists: [] });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios(\r\n                'http://localhost:4000/all_person/'\r\n            );\r\n            setListData({ lists: result.data });\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            <div className=\"list-img\"></div>\r\n                <div className=\"list-blurb\"><h2>Needs & Deeds</h2>\r\n                <p>This is the current list of needs in the community. Someone has submitted a request for help.</p>\r\n                <p>Every <b><i>need</i></b>  is is waiting to be claimed.</p>\r\n                <p>If you would like to perform a <b><i>deed</i></b>, click the \"Claim Need\" mail icon to access the contact information.</p>\r\n                <h3>List of Needs</h3>\r\n                <p id=\"table-hint\">Scroll right to view contact info.</p>\r\n            </div>\r\n            <div id=\"table-div\">\r\n                <Table striped style={{  }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Address</th>\r\n                            <th>Need</th>\r\n                            <th>Description</th>\r\n                            <th>Help needed by (date)</th>\r\n                            <th>Claim Need</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {listData.lists.map((current, i) => (\r\n                            <ListBar person={current} key={i} />\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListPerson;","import React, { useState, useEffect } from 'react';\r\nimport { Form, FormGroup, Label, Input, Col, Button } from 'reactstrap';\r\nimport { AiOutlineUserAdd, AiOutlineUser, AiOutlineExport, AiOutlineForward } from 'react-icons/ai';\r\nimport axios from 'axios';\r\n\r\nconst EditPerson = (props) => {\r\n    const [data, setData] = useState({\r\n        personName: \"\",\r\n        personEmail: \"\",\r\n        personAddress: \"\",\r\n        personNeed: \"\",\r\n        personPhoneNumber: \"\",\r\n        personVerification: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios(\r\n                `http://localhost:4000/all_person/${props.match.params.id}`\r\n            );\r\n            setData({ ...result.data });\r\n        };\r\n        fetchData();\r\n    }, [props.match.params.id]);\r\n\r\n    const onChangePersonData = (e) => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(data);\r\n    }\r\n\r\n    const onSubmitPersonData = (e) => {\r\n        e.preventDefault();\r\n        axios.post(`http://localhost:4000/all_person/update/${props.match.params.id}`, data).then(res => console.log(res.data));\r\n        props.history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit\" style={{}}>\r\n            <div className=\"edit-img\"></div>\r\n            <h3><AiOutlineUserAdd /> Edit Name</h3>\r\n            <Form className=\"edit-form\" onSubmit={onSubmitPersonData}>\r\n                <FormGroup row>\r\n                    <Col>\r\n                        <Label><AiOutlineUser />  Name </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"personName\"\r\n                            className=\"form-control\"\r\n                            value={data.personName}\r\n                            onChange={onChangePersonData} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col>\r\n                        <Label><AiOutlineExport /> Email </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"personEmail\"\r\n                            className=\"form-control\"\r\n                            value={data.personEmail}\r\n                            onChange={onChangePersonData} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col>\r\n                        <Label><AiOutlineExport /> Address </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"personAddress\"\r\n                            className=\"form-control\"\r\n                            value={data.personAddress}\r\n                            onChange={onChangePersonData} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col md={6}>\r\n                        <Label><AiOutlineExport /> Need help with </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"personNeed\"\r\n                            className=\"form-control\"\r\n                            value={data.personNeed}\r\n                            onChange={onChangePersonData} />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Label><AiOutlineExport /> Number to contact you </Label>\r\n                        <Input\r\n                            type=\"number\"\r\n                            name=\"personPhoneNumber\"\r\n                            className=\"form-control\"\r\n                            value={data.personPhoneNumber}\r\n                            onChange={onChangePersonData} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup check row>\r\n                    <Col>\r\n                        <Label check>\r\n                            <Input\r\n                                type=\"checkbox\"\r\n                                name=\"personVerification\"\r\n                                defaultChecked={data.personVerification ? true : false}\r\n                                value={data.personVerification ? Boolean(true) : Boolean(false)}\r\n                                onChange={onChangePersonData}\r\n                                required />{data.personVerification ? \"Data is verified\" : \"Data isn't verified\"}\r\n                        </Label>\r\n                    </Col>\r\n                </FormGroup>\r\n                <Button color=\"primary\"><AiOutlineForward /> Verified Data</Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPerson;","import React, { useState } from 'react';\r\nimport { Form, FormGroup, Label, Input, Col, Button } from 'reactstrap';\r\nimport { AiOutlineUserAdd, AiOutlineUser, AiOutlineExport, AiOutlineForward } from 'react-icons/ai';\r\nimport axios from 'axios';\r\n// import Dropdown from './Dropdown';\r\n\r\nconst CreatePerson = (props) => {\r\n    const [data, setData] = useState({\r\n        personName: \"\",\r\n        personEmail: \"\",\r\n        personAddress: \"\",\r\n        personNeed: \"\",\r\n        personPhoneNumber: \"\",\r\n        personDate: \"\",\r\n        personDescription: \"\"\r\n    });\r\n\r\n    const onChangePersonData = (e) => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n // validate email on submission\r\n const validateEmail = (data) => {\r\n    console.log(\"person:\", data.personEmail);\r\n\r\n    const email = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n      data.personEmail\r\n    );\r\n\r\n    if (email) {\r\n      return \"Valid email entered!\";\r\n    } else {\r\n      return \"Please enter a valid email\";\r\n    }\r\n  };\r\n\r\n\r\n    const onSubmitPersonData = (e) => {\r\n        e.preventDefault();\r\n        axios.post('http://localhost:4000/all_person/add', data).then(res => {\r\n            setData({\r\n                personName: \"\",\r\n                personEmail: \"\",\r\n                personAddress: \"\",\r\n                personNeed: \"\",\r\n                personPhoneNumber: \"\",\r\n                personDate: \"\",\r\n                personDescription: \"\"\r\n            });\r\n            console.log(res.data);\r\n            props.history.push('/');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"create\" style={{ }}>\r\n            <div className=\"create-img\"></div>\r\n            <h3><AiOutlineUserAdd /> Enter Details About Your Need</h3>\r\n            <p>Please fill out form with your details to submit a <b>need.</b></p>\r\n            <Form className=\"create-form\" onSubmit={onSubmitPersonData}>\r\n                <FormGroup row>\r\n                    <Col md={6}>\r\n                        <Label><AiOutlineUser /> Name </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"personName\"\r\n                            className=\"form-control\"\r\n                            value={data.personName}\r\n                            onChange={onChangePersonData} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col md={6}>\r\n                        <Label><AiOutlineExport /> Email </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"personEmail\"\r\n                            className=\"form-control\"\r\n                            value={data.personEmail}\r\n                            onChange={onChangePersonData} />\r\n                            {data.email ? validateEmail(data) : validateEmail(data)}\r\n                    </Col>\r\n                    <br />\r\n                    <Col md={6}>\r\n                        <Label><AiOutlineExport /> Number to contact you</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter contact phone number\"\r\n                            name=\"personPhoneNumber\"\r\n                            className=\"form-control\"\r\n                            value={data.personPhoneNumber}\r\n                            onChange={onChangePersonData} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col md={6}>\r\n                        <Label><AiOutlineExport /> City/Town </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"personAddress\"\r\n                            className=\"form-control\"\r\n                            value={data.personAddress}\r\n                            onChange={onChangePersonData} />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Label><AiOutlineExport /> Help needed by (date) </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"MM/DD/YYYY\"\r\n                            name=\"personDate\"\r\n                            className=\"form-control\"\r\n                            value={data.personDate}\r\n                            onChange={onChangePersonData} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col md={6}>\r\n                        <Label><AiOutlineExport /> Need help with </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"personNeed\"\r\n                            className=\"category\"\r\n                            value={data.personNeed}\r\n                            onChange={onChangePersonData} >\r\n                            {/* <option>Select</option>\r\n                            <option>Yard Work</option>\r\n                            <option>Housework</option>\r\n                            <option>Grocery</option>\r\n                            <option>School Work</option>\r\n                            <option>Other</option> */}\r\n                        </Input>\r\n                        <p>Examples: Yard work, Housework, Schoolwork, Other</p>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                {/* <Dropdown>\r\n                    name=\"personNeed\"\r\n                    className=\"input-field\"\r\n                    value={data.personNeed}\r\n                    onChange={onChangePersonData} >\r\n                    <option>Select</option>\r\n                    <option>Yard Work</option>\r\n                    <option>Housework</option>\r\n                    <option>Grocery</option>\r\n                    <option>School Work</option>\r\n                    <option>Other</option>\r\n                </Dropdown> */}\r\n                    <Col md={6}>\r\n                        <Label><AiOutlineExport /> Description of Need </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"personDescription\"\r\n                            className=\"form-control\"\r\n                            value={data.personDescription}\r\n                            onChange={onChangePersonData} />\r\n                    </Col>\r\n                </FormGroup>\r\n\r\n            <Button color=\"primary\"><AiOutlineForward /> Submit</Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePerson;","import React, { useState, useEffect } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Col, Button } from \"reactstrap\";\r\nimport {\r\n  AiOutlineUser,\r\n  AiOutlineExport,\r\n  AiOutlineDelete,\r\n} from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\n\r\nconst DeletePerson = (props) => {\r\n  const [data, setData] = useState({\r\n    personName: \"\",\r\n    personEmail: \"\",\r\n    personAddress: \"\",\r\n    personNeed: \"\",\r\n    personPhoneNumber: \"\",\r\n    personDescription: \"\",\r\n    personHelperEmail: \"\",\r\n    personValidEmail: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        `http://localhost:4000/all_person/${props.match.params.id}`\r\n      );\r\n      setData({ ...result.data });\r\n    };\r\n    fetchData();\r\n  }, [props.match.params.id]);\r\n\r\n\r\n  const onDeletePersonData = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .delete(\r\n        `http://localhost:4000/all_person/delete/${props.match.params.id}`,\r\n        data\r\n      )\r\n      .then((res) => {\r\n        props.history.push(\"/\");\r\n        console.log(res.data);\r\n      })\r\n  };\r\n\r\n \r\n //   validate helper's email on submission\r\n const validateEmail = (newData) => {\r\n\r\n  console.log(\"email:\", newData.personHelperEmail)\r\n\r\n  const email = (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(newData.personHelperEmail));\r\n\r\n  setData ({\r\n    ...newData,\r\n    personValidEmail: email\r\n  })\r\n\r\n}\r\n\r\n\r\n   // change when email address is entered\r\n  const onChangeEmail = (e) => {\r\n    const { name, value } = e.target;\r\n    const newData = {\r\n      ...data,\r\n      [name]: value,\r\n    }\r\n    setData(newData);\r\n    console.log(data);\r\n    validateEmail(newData)\r\n    // console.log(validateEmail)\r\n  };\r\n\r\n  return (\r\n    <div className=\"delete\" style={{}}>\r\n      <div className=\"delete-img\"></div>\r\n        <h3>Claim Need</h3>\r\n        <p>If you would like to offer to fulfill this need, please contact this person directly.</p>\r\n\r\n        <Form className=\"delete-form\" onSubmit={onDeletePersonData}>\r\n          <div className=\"claim\">\r\n            <FormGroup row>\r\n              <Col md={6}>\r\n                <Label>\r\n                  <AiOutlineUser /> Name{\" \"}\r\n                </Label>\r\n                <Input\r\n                  readOnly\r\n                  type=\"text\"\r\n                  name=\"personName\"\r\n                  className=\"form-control\"\r\n                  value={data.personName}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Col md={6}>\r\n                <Label>\r\n                  <AiOutlineExport /> Email{\" \"}\r\n                </Label>\r\n                <Input\r\n                  readOnly\r\n                  type=\"text\"\r\n                  name=\"personEmail\"\r\n                  className=\"form-control\"\r\n                  value={data.personEmail}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Col md={6}>\r\n                <Label>\r\n                  <AiOutlineExport /> City/Town{\" \"}\r\n                </Label>\r\n                <Input\r\n                  readOnly\r\n                  type=\"text\"\r\n                  name=\"personAddress\"\r\n                  className=\"form-control\"\r\n                  value={data.personAddress}\r\n                />\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label>\r\n                  <AiOutlineExport /> Help needed by (date){\" \"}\r\n                </Label>\r\n                <Input\r\n                  readOnly\r\n                  type=\"text\"\r\n                  name=\"personDate\"\r\n                  className=\"form-control\"\r\n                  value={data.personDate}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Col md={6}>\r\n                <Label>\r\n                  <AiOutlineExport /> Need help with{\" \"}\r\n                </Label>\r\n                <Input\r\n                  readOnly\r\n                  type=\"text\"\r\n                  name=\"personNeed\"\r\n                  className=\"form-control\"\r\n                  value={data.personNeed}\r\n                />\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label>\r\n                  <AiOutlineExport /> Contact Number{\" \"}\r\n                </Label>\r\n                <Input\r\n                  readOnly\r\n                  type=\"text\"\r\n                  name=\"personPhoneNumber\"\r\n                  className=\"form-control\"\r\n                  value={data.personPhoneNumber}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Col md={6}>\r\n                <Label>\r\n                  <AiOutlineExport /> Description of Need{\" \"}\r\n                </Label>\r\n                <Input\r\n                  readOnly\r\n                  type=\"text\"\r\n                  name=\"personDescription\"\r\n                  className=\"form-control\"\r\n                  value={data.personDescription}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Col md={6}>\r\n                <Label>\r\n                  <AiOutlineExport /> Enter Your Email{\" \"}\r\n                </Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"personHelperEmail\"\r\n                  value={data.personHelperEmail}\r\n                  onChange={onChangeEmail}\r\n                  required\r\n                />\r\n                {data.personValidEmail\r\n                  ? \"Email validated\"\r\n                  : \"Please enter a valid email!\"}\r\n              </Col>\r\n            </FormGroup>\r\n        </div>\r\n        <div>\r\n        <p><i>*By agreeing to \"Claim Deed\" you are agreeing to:</i>\r\n          <ul>\r\n            <li>-contact this person</li>\r\n            <li>-offer to <u><b>voluntarily</b></u> fulfill the need</li>\r\n          </ul>\r\n        </p>\r\n          <Button color=\"danger\" disabled={!data.personValidEmail}>\r\n            <AiOutlineDelete /> Claim Deed\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeletePerson;\r\n","import React from 'react';\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css/dist/js/materialize.min.js\";import './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport ListPerson from './components/listPerson.component';\nimport EditPerson from './components/editPerson.component';\nimport CreatePerson from './components/createPerson.component';\nimport DeletePerson from './components/deletePerson.component';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"container\">\n        {/* <nav className=\"navbar navbar-expand-lg navbar-dark\">\n          <Link to=\"/\" className=\"navbar-brand\">Needs & Deeds</Link>\n          <div className=\"collapse navbar-collapse\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"navbar-item\">\n                <Link to=\"/\" className=\"nav-link\">View Local Needs</Link>\n              </li>\n              <li className=\"navbar-item\">\n                <Link to=\"/create\" className=\"nav-link\"> Submit a Need</Link>\n              </li>\n            </ul>\n          </div>\n        </nav> */}\n        <nav>\n          <div className=\"nav-wrapper\">\n            <Link to=\"/\" className=\"brand-logo\">Needs & Deeds</Link>\n              <ul id=\"large-nav\" className=\"right\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"\">View Local Needs</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/create\" className=\"nav-link\"> Submit a Need</Link>\n                </li> \n              </ul>\n          </div>\n          <div id=\"small-div\">\n              <ul id=\"small-nav\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"\">View Local Needs</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/create\" className=\"nav-link\"> Submit a Need</Link>\n                </li> \n              </ul>\n          </div>\n        </nav>\n        <Route path=\"/\" exact component={ListPerson} />\n        <Route path=\"/edit/:id\" component={EditPerson} />\n        <Route path=\"/create\" component={CreatePerson} />\n        <Route path=\"/delete/:id\" component={DeletePerson} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css/dist/js/materialize.min.js\";\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}